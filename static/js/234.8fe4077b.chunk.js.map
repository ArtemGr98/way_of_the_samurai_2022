{"version":3,"file":"static/js/234.8fe4077b.chunk.js","mappings":"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","sources":["components/Messages/ChatListItem/ChatListItem.jsx","components/Messages/Chat/Chat.jsx","components/Messages/MessageForm.jsx","components/Messages/Messages.jsx","hoc/withAuthRedirect.js","components/Messages/MessagesContainer.js","interface/Button/Button.js","interface/Form/Form.js"],"sourcesContent":["import {NavLink} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ChatListLink = styled(NavLink)`\r\n  padding: 10px;\r\n  text-decoration: none;\r\n  border-radius: 8px;\r\n  &:hover {\r\n    background: aqua;\r\n  }\r\n  &.active {\r\n    background: aqua;\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst ChatListItem = (props) => {\r\n    const path = \"/messages/\" + props.id\r\n\r\n    const onActiveChatId = (id) => {\r\n        props.activeChatId(id)\r\n    }\r\n\r\n    return (\r\n        <ChatListLink to={path} id={props.id} onClick={() => onActiveChatId(props.id)}>\r\n            {props.name}\r\n        </ChatListLink>\r\n    )\r\n}\r\n\r\nexport default ChatListItem","import styled from \"styled-components\";\r\n\r\nconst ChatMessageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.position === \"start\") ? \"start\" : \"end\"};\r\n  text-align: ${props => (props.position === \"start\") ? \"start\" : \"end\"};\r\n`\r\nconst ChatMessage = styled.div`\r\n  width: 50%;\r\n  background-color: ${props => (props.position === \"start\") ? \"wheat\" : \"cyan\"};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst Chat = (props) => {\r\n    return (\r\n        <ChatMessageWrapper position={props.position} id={props.id}>\r\n            <ChatMessage position={props.position}>\r\n                {props.text}\r\n            </ChatMessage>\r\n        </ChatMessageWrapper>\r\n    )\r\n}\r\n\r\nexport default Chat","import {ErrorMessage, Field, Form, withFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {TextareaForm, ValidationError} from \"../../interface/Form/Form\";\r\nimport {Button} from \"../../interface/Button/Button\";\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <Form>\r\n            <div>\r\n                <Field type=\"text\" name=\"message\" component={TextareaForm} />\r\n                <ErrorMessage name=\"message\" component={ValidationError} />\r\n            </div>\r\n            <Button type=\"submit\" disabled={!(props.isValid && props.dirty)}>\r\n                send\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withFormik({\r\n    mapPropsToValues: () => ({message: ''}),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        message: Yup.string()\r\n            .required(\"\"),\r\n    }),\r\n\r\n    handleSubmit: (values, formikBag ) => {\r\n        formikBag.props.addMessage(values.message)\r\n        formikBag.setSubmitting(false)\r\n        formikBag.resetForm({})\r\n    },\r\n\r\n    displayName: 'MessageForm',\r\n})(MessageForm);\r\n","import styled from \"styled-components\";\r\nimport ChatListItem from \"./ChatListItem/ChatListItem\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport MessageForm from \"./MessageForm\";\r\n\r\nconst MessagesWrapper = styled.div`\r\n  display: flex;\r\n`\r\nconst ChatList = styled.div`\r\n  width: 30%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ChatWrapper = styled.div`\r\n  width: 70%;\r\n  padding: 20px;\r\n`\r\n\r\nconst Messages = (props) => {\r\n\r\n    return (\r\n        <MessagesWrapper>\r\n            <ChatList>\r\n                {props.chatListData.map(data => <ChatListItem\r\n                    name={data.name} id={data.id} key={data.id} activeChatId={props.activeChatId} />)}\r\n            </ChatList>\r\n            <ChatWrapper>\r\n                <Routes>\r\n                    {props.chatData.map(data => {\r\n                        return (\r\n                            <Route path={`/${data.chatId}`}\r\n                                   key={data.chatId}\r\n                                   element={ data.chatText.map(data => {\r\n                                       return (\r\n                                           <Chat text={data.text}\r\n                                                 id={data.id}\r\n                                                 position={data.position}\r\n                                                 key={data.id}/>\r\n                                       )\r\n                                   })} />\r\n                            )\r\n                        }\r\n                    )}\r\n                </Routes>\r\n                <MessageForm addMessage={props.addMessage} />\r\n            </ChatWrapper>\r\n        </MessagesWrapper>\r\n    )\r\n}\r\n\r\nexport default Messages","import {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuthMe) return <Navigate to=\"/login\" />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuthMe: state.authMe.isAuthMe\r\n        }\r\n    }\r\n\r\n    const connectRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connectRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect","import Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {activeChatId, addMessage} from \"../../redux/messages/messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        chatListData: state.messages.chatListData,\r\n        chatData: state.messages.chatData,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage, activeChatId}),\r\n    withAuthRedirect,\r\n)(Messages)\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  background: deepskyblue;\r\n  color: white;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border: none;\r\n  :disabled {\r\n    opacity: 0.4;\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Textarea = styled.textarea`\r\n  resize: none;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  height: 50px;\r\n  width: 200px;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 6px;\r\n  padding: 5px 10px;\r\n  width: 200px;\r\n  border: 1px solid gray;\r\n`\r\n\r\nexport const ValidationError = styled.div`\r\n  font-weight: bold;\r\n  color: red;\r\n`\r\n\r\nconst ElementForm = Element => ({field, form: { touched, errors }, ...props}) => {\r\n    return <Element {...field} {...props} />\r\n}\r\n\r\nexport const InputForm = ElementForm(Input)\r\nexport const TextareaForm = ElementForm(Textarea)\r\n\r\n"],"names":["ChatListLink","styled","NavLink","props","path","id","to","onClick","activeChatId","name","ChatMessageWrapper","position","ChatMessage","text","withFormik","mapPropsToValues","message","validationSchema","Yup","shape","required","handleSubmit","values","formikBag","addMessage","setSubmitting","resetForm","displayName","type","component","TextareaForm","ValidationError","Button","disabled","isValid","dirty","MessagesWrapper","ChatList","ChatWrapper","chatListData","map","data","chatData","chatId","element","chatText","Component","connect","state","isAuthMe","authMe","compose","messages","withAuthRedirect","Messages","Textarea","Input","ElementForm","Element","field","form","touched","errors","InputForm"],"sourceRoot":""}