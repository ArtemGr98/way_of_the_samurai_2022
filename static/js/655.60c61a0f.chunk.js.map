{"version":3,"file":"static/js/655.60c61a0f.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post.jsx","components/Profile/Posts/PostForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","interface/Button/Button.js","interface/Form/Form.js"],"sourcesContent":["import background from \"../../../img/Profile/background.jpg\";\r\nimport profileImg from \"../../../img/Profile/profileImg.png\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../common/Loader/Loader\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {updateStatus} from \"../../../redux/profile/profile\";\r\n\r\nconst ProfileImg = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\nconst ProfileInfoWrapper = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  max-height: 300px;\r\n`\r\nconst ProfileAva = styled.div`\r\n  width: 20%;\r\n  height: 100%;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\nconst ProfileDescription = styled.div`\r\n  width: 80%;\r\n  padding-left: 20px\r\n`\r\n\r\n\r\nconst ProfileInfo = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const profileInfo = useSelector(state => state.profile.profileInfo)\r\n    const status = useSelector(state => state.profile.status)\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [stateStatus, setStatus] = useState(status)\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status])\r\n\r\n    const editToggle = () => {\r\n        setEditMode(!editMode)\r\n        if (editMode) {\r\n            dispatch(updateStatus(stateStatus))\r\n        }\r\n    }\r\n\r\n    const cancel = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    if (!profileInfo) {\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileImg>\r\n                <img src={background} alt=\"background\"/>\r\n            </ProfileImg>\r\n\r\n            <ProfileInfoWrapper>\r\n                <ProfileAva>\r\n                    <img\r\n                        src={profileInfo.photos.large ? profileInfo.photos.large : profileImg}\r\n                        alt=\"profileImg\"/>\r\n                </ProfileAva>\r\n                <ProfileDescription>\r\n                    <div>\r\n                        {profileInfo.fullName}\r\n                    </div>\r\n                    <div>\r\n                        {editMode ?\r\n                            <div>\r\n                                <input autoFocus={true} type=\"text\"\r\n                                        value={stateStatus} onChange={onChangeStatus}/>\r\n                                <button onClick={cancel}>\r\n                                    cancel\r\n                                </button>\r\n                            </div>\r\n                            :\r\n                            <span>\r\n                                {status || \"no status\"}\r\n                            </span>\r\n                        }\r\n                        <button onClick={editToggle}>\r\n                            edit\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        {profileInfo.aboutMe ? profileInfo.aboutMe : \"aboutMe\"}\r\n                    </div>\r\n\r\n                </ProfileDescription>\r\n            </ProfileInfoWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import profileImg from '../../../img/Profile/profileImg.png'\r\nimport { Button} from \"../../../interface/Button/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostWrapper = styled.div`\r\n  display: flex;\r\n`\r\nconst PostAva = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\nconst PostTextWrapper = styled.div`\r\n  padding-left: 10px;\r\n`\r\nconst PostText = styled.div`\r\n  margin-bottom: 10px;\r\n`\r\nconst PostButton = styled(Button)`\r\n  margin-right: 10px;\r\n`\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <PostWrapper>\r\n            <PostAva>\r\n                <img src={profileImg} alt=\"profileImg\"/>\r\n            </PostAva>\r\n            <PostTextWrapper>\r\n                <PostText>\r\n                    {props.text}\r\n                </PostText>\r\n                <div>\r\n                    <PostButton>\r\n                        like: {props.like}\r\n                    </PostButton>\r\n                    <PostButton>\r\n                        dislike: {props.dislike}\r\n                    </PostButton>\r\n                </div>\r\n            </PostTextWrapper>\r\n        </PostWrapper>\r\n    )\r\n}\r\n\r\nexport default Post","import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {TextareaForm, ValidationError} from \"../../../interface/Form/Form\";\r\nimport {Button} from \"../../../interface/Button/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profile/profile\";\r\n\r\nconst PostForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{post: '',}}\r\n            validationSchema={Yup.object().shape({\r\n                post: Yup.string()\r\n                    .required(\"\"),\r\n            })}\r\n            onSubmit={(values, actions) => { \r\n                dispatch(addPost(values.post))\r\n                actions.resetForm({\r\n                    values: {\r\n                        post: ''\r\n                    }\r\n                })\r\n                //actions.setSubmitting(false);\r\n            }}\r\n        >\r\n            {props => (\r\n                <Form>\r\n                    <div>\r\n                        <Field type=\"text\" name=\"post\" component={TextareaForm} />\r\n                        <ErrorMessage name=\"post\" component={ValidationError} />\r\n                    </div>\r\n                    <Button type=\"submit\" disabled={!(props.isValid && props.dirty)}>\r\n                        send\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default PostForm","import Post from \"./Post\";\r\nimport styled from \"styled-components\";\r\nimport PostForm from \"./PostForm\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PostsTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  padding: 40px 0;\r\n`\r\n\r\nconst Posts = () => {\r\n\r\n    const postData = useSelector(state => state.profile.postData)\r\n\r\n    return (\r\n        <div>\r\n            <PostForm />\r\n            <div>\r\n                <PostsTitle>\r\n                    My posts\r\n                </PostsTitle>\r\n                {postData.map( data => <Post key={data.id} text={data.text} like={data.like} dislike={data.dislike} id={data.id} /> )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {setProfileInfo, setStatus} from \"../../redux/profile/profile\";\r\n\r\nconst Profile = () => {\r\n\r\n    let {userId} = useParams();\r\n    const authMe = useSelector(state => state.authMe.id)\r\n\r\n    if (!userId) {\r\n        userId = authMe\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        if (!authMe) {\r\n            return navigate('/login')\r\n        }\r\n        dispatch(setProfileInfo(userId))\r\n        dispatch(setStatus(userId))\r\n    }, [userId, dispatch, authMe, navigate])\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <Posts />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  background: deepskyblue;\r\n  color: white;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border: none;\r\n  :disabled {\r\n    opacity: 0.4;\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Textarea = styled.textarea`\r\n  resize: none;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  height: 50px;\r\n  width: 200px;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 6px;\r\n  padding: 5px 10px;\r\n  width: 200px;\r\n  border: 1px solid gray;\r\n`\r\n\r\nexport const ValidationError = styled.div`\r\n  font-weight: bold;\r\n  color: red;\r\n`\r\n\r\nconst ElementForm = Element => ({field, form: { touched, errors }, ...props}) => {\r\n    return <Element {...field} {...props} />\r\n}\r\n\r\nexport const InputForm = ElementForm(Input)\r\nexport const TextareaForm = ElementForm(Textarea)\r\n\r\n"],"names":["ProfileImg","styled","ProfileInfoWrapper","ProfileAva","ProfileDescription","dispatch","useDispatch","profileInfo","useSelector","state","profile","status","useState","editMode","setEditMode","stateStatus","setStatus","useEffect","src","alt","photos","large","profileImg","fullName","autoFocus","type","value","onChange","e","currentTarget","onClick","updateStatus","aboutMe","Loader","PostWrapper","PostAva","PostTextWrapper","PostText","PostButton","Button","props","text","like","dislike","initialValues","post","validationSchema","Yup","shape","required","onSubmit","values","actions","addPost","resetForm","name","component","TextareaForm","ValidationError","disabled","isValid","dirty","PostsTitle","postData","map","data","id","userId","useParams","authMe","navigate","useNavigate","setProfileInfo","Textarea","Input","ElementForm","Element","field","form","touched","errors","InputForm"],"sourceRoot":""}