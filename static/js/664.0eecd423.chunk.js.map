{"version":3,"file":"static/js/664.0eecd423.chunk.js","mappings":"4PAiCA,GAAeA,EAAAA,EAAAA,IAAW,CACtBC,iBAAkB,iBAAO,CACrBC,MAAO,GACPC,SAAU,GACVC,YAAY,IAGhBC,iBAAkBC,EAAAA,KAAaC,MAAM,CACjCL,MAAOI,EAAAA,KAAaJ,QACfM,SAAS,YACdL,SAAUG,EAAAA,KACLG,IAAI,EAAG,oCACPD,SAAS,cAGlBE,aAAc,SAACC,EAAQC,GACnBA,EAAUC,MAAMC,UAAUH,EAAQC,EAAUG,WAAWC,MAAK,SAACC,GACzDL,EAAUM,eAAc,GACV,IAAdD,GAAmBL,EAAUO,UAAU,QAG/CC,YAAa,aArBjB,EA3Bc,SAACP,GACX,OAAIA,EAAMQ,UAAiB,SAAC,KAAD,CAAUC,GAAG,cAEpC,UAAC,KAAD,YACI,mCACA,4BACI,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,UAAWC,EAAAA,MAC5C,SAAC,KAAD,CAAcF,KAAK,QAAQC,UAAWE,EAAAA,SAE1C,4BACI,SAAC,KAAD,CAAOJ,KAAK,WAAWC,KAAK,WAAWC,UAAWC,EAAAA,MAClD,SAAC,KAAD,CAAcF,KAAK,WAAWC,UAAWE,EAAAA,SAE7C,4BACI,SAAC,KAAD,CAAOJ,KAAK,WAAWC,KAAK,aAAaI,GAAG,gBAC5C,kBAAOC,QAAQ,aAAf,4BAEJ,SAAC,KAAD,UACKhB,EAAMiB,UAEX,SAACC,EAAA,EAAD,CAAQR,KAAK,SAASS,SAAUnB,EAAMoB,aAAtC,0B,UChBZ,GAAeC,EAAAA,EAAAA,KANS,SAAAC,GACpB,MAAO,CACHd,SAAUc,EAAMC,OAAOf,YAIS,CAACP,UAAAA,EAAAA,IAAzC,CAAqDuB,I,oECRxCN,E,QAASO,GAAAA,OAAH,2L,mLCANC,EAAWD,EAAAA,GAAAA,SAAH,oHAQRE,EAAQF,EAAAA,GAAAA,MAAH,iHAOLX,EAAkBW,EAAAA,GAAAA,IAAH,6DAKtBG,EAAc,SAAAC,GAAO,OAAI,YAAmD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAA8B/B,GAAW,EAAjCgC,QAAiC,EAAxBC,QAAwB,aAC7E,OAAO,SAACJ,GAAD,kBAAaC,GAAW9B,MAGtBa,EAAYe,EAAYD,GACxBO,EAAeN,EAAYF","sources":["components/Login/Login.jsx","components/Login/LoginContainer.js","interface/Button/Button.js","interface/Form/Form.js"],"sourcesContent":["import {ErrorMessage, Field, Form, withFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {InputForm, ValidationError} from \"../../interface/Form/Form\";\r\nimport {Button} from \"../../interface/Button/Button\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuthMe) return <Navigate to=\"/profile\" />\r\n    return (\r\n        <Form>\r\n            <h1>Login</h1>\r\n            <div>\r\n                <Field type=\"email\" name=\"email\" component={InputForm} />\r\n                <ErrorMessage name=\"email\" component={ValidationError} />\r\n            </div>\r\n            <div>\r\n                <Field type=\"password\" name=\"password\" component={InputForm} />\r\n                <ErrorMessage name=\"password\" component={ValidationError} />\r\n            </div>\r\n            <div>\r\n                <Field type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" />\r\n                <label htmlFor=\"rememberMe\">rememberMe</label>\r\n            </div>\r\n            <ValidationError>\r\n                {props.status}\r\n            </ValidationError>\r\n            <Button type=\"submit\" disabled={props.isSubmitting}>\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email()\r\n            .required(\"Required\"),\r\n        password: Yup.string()\r\n            .min(8, \"Must be longer than 8 characters\")\r\n            .required(\"Required\"),\r\n    }),\r\n\r\n    handleSubmit: (values, formikBag ) => {\r\n        formikBag.props.authLogin(values, formikBag.setStatus).then((resulCode) => {\r\n            formikBag.setSubmitting(false)\r\n            resulCode === 0 && formikBag.resetForm({})\r\n        })\r\n    },\r\n    displayName: 'LoginForm',\r\n})(Login);\r\n","import {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {authLogin} from \"../../redux/authMe/authMe\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthMe: state.authMe.isAuthMe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {authLogin})(Login)","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  background: deepskyblue;\r\n  color: white;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border: none;\r\n  :disabled {\r\n    opacity: 0.4;\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Textarea = styled.textarea`\r\n  resize: none;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  height: 50px;\r\n  width: 200px;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 6px;\r\n  padding: 5px 10px;\r\n  width: 200px;\r\n  border: 1px solid gray;\r\n`\r\n\r\nexport const ValidationError = styled.div`\r\n  font-weight: bold;\r\n  color: red;\r\n`\r\n\r\nconst ElementForm = Element => ({field, form: { touched, errors }, ...props}) => {\r\n    return <Element {...field} {...props} />\r\n}\r\n\r\nexport const InputForm = ElementForm(Input)\r\nexport const TextareaForm = ElementForm(Textarea)\r\n\r\n"],"names":["withFormik","mapPropsToValues","email","password","rememberMe","validationSchema","Yup","shape","required","min","handleSubmit","values","formikBag","props","authLogin","setStatus","then","resulCode","setSubmitting","resetForm","displayName","isAuthMe","to","type","name","component","InputForm","ValidationError","id","htmlFor","status","Button","disabled","isSubmitting","connect","state","authMe","Login","styled","Textarea","Input","ElementForm","Element","field","form","touched","errors","TextareaForm"],"sourceRoot":""}